name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch tutti i commit per poter leggere il log completo

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Create Version with Changeset
        id: version
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          OUTPUT=$(npx changeset version)
          VERSION=$(echo "$OUTPUT" | grep -o '[0-9]*\.[0-9]*\.[0-9]*')
          PACKAGE_VERSION="${PACKAGE_NAME}@${VERSION}"
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Commit Version Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .  # Aggiungi il changelog e le modifiche al versioning
          git commit -m "chore: prepare release"  # Commit della nuova versione
          git push origin main --follow-tags  # Spinge il commit e il tag sul main

      - name: Create Release on GitHub
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release ${{ steps.version.outputs.new_version }}
          body: "Release notes for version ${{ steps.version.outputs.new_version }}"
          draft: false
          prerelease: false
