name: Release Workflow

on:
  push:
    branches:
      - main  # Triggered by push on main branch

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # Checkout del codice
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Installa le dipendenze
      - name: Install dependencies
        run: npm ci --audit=false --fund=false

      # Esegui l'azione changeset per gestire la versione e il changelog
      - name: Create Release with Changesets
        uses: changesets/action@f13b1baaa620fde937751f5d2c3572b9da32af23
        with:
          version: npm run version  # Usa npm run version (assicurati che sia definito in package.json)
          publish: npm run publish  # Usa npm run publish (assicurati che sia definito in package.json)
          commit: "Update CHANGELOG and prepare next release"
          title: "Push next releases"
          createGithubReleases: true
          setupGitUser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Estrai il nome del pacchetto dal package.json
      - name: Extract Package Name and Version
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "package_version=v$VERSION" >> $GITHUB_OUTPUT

      # Crea il tag basato sul nome del pacchetto e sulla versione
      - name: Create Git Tag
        run: |
          git tag v${{ steps.version.outputs.package_version }}
          git push origin v${{ steps.version.outputs.package_version }}
