name: Release Workflow

on:
  push:
    branches:
      - main  # Triggered by push on the main branch

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout del codice
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Installa le dipendenze
      - name: Install dependencies
        run: npm ci --audit=false --fund=false

      # Step 4: Esegui l'azione changeset per gestire la versione e il changelog
      - name: Create Release with Changesets
        uses: changesets/action@f13b1baaa620fde937751f5d2c3572b9da32af23
        with:
          version: npm run version  # Usa npm run version
          publish: npm run publish  # Usa npm run publish
          commit: "Update CHANGELOG and prepare next release"
          title: "Push next releases"
          createGithubReleases: false  # Non crea la release qui, sarÃ  fatta successivamente
          setupGitUser: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Estrai il nome del pacchetto dal package.json e la versione
      - name: Extract Package Name and Version
        id: version
        run: |
          # Estrai il nome del pacchetto dal package.json
          PACKAGE_NAME=$(node -p "require('./package.json').name")

          # Estrai la versione dal changelog (assumendo che changeset abbia taggato una versione)
          VERSION=$(git describe --tags --abbrev=0)

          # Combina nome del pacchetto e versione
          PACKAGE_VERSION="${PACKAGE_NAME}@${VERSION}"

          # Salva il risultato come output
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      # Step 6: Crea il tag Git basato sul nome del pacchetto e sulla versione
      - name: Create Git Tag
        run: |
          git tag v${{ steps.version.outputs.package_version }}  # Crea il tag
          git push origin v${{ steps.version.outputs.package_version }}  # Spingi il tag nel repository

      # Step 7: Crea la release su GitHub
      - name: Create GitHub Release
        uses: ghooks/create-release-action@v1  # Usa un'azione GitHub per creare la release
        with:
          tag_name: v${{ steps.version.outputs.package_version }}
          release_name: "Release v${{ steps.version.outputs.package_version }}"
          body: "Descrizione della release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
